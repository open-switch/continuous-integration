steps:
  - label: ":debian: Jessie"
    env:
      DIST: jessie
      OPX_RELEASE: unstable
    command: |
      if [[ -n "$BUILDKITE_TAG" ]]; then
        VERSION="$(grep ^Version: DEBIAN/control | awk -F': ' '{print $2}')"
        OPX_RELEASE=testing
      else
        echo "--- Bumping version with git sha and date"
        v="$(grep ^Version: DEBIAN/control | awk -F': ' '{print $2}')"
        if [[ $v == *"+"* ]]; then s="."; else s="+"; fi
        VERSION="${v}${s}git$(date +%Y%m%d).$(git rev-parse --short HEAD)"
        echo "Bumping from $v to $VERSION"
        sed -i "s/$v/$VERSION/g" DEBIAN/control
      fi
      cd ..
      echo "+++ Building packages"
      OUTPUT="pool/${DIST}-amd64/$BUILDKITE_PIPELINE_SLUG"
      mkdir -p "$OUTPUT"
      docker run \
        --rm \
        --privileged \
        -e LOCAL_UID=$(id -u ${USER}) \
        -e LOCAL_GID=$(id -g ${USER}) \
        -v ${PWD}:/mnt \
        -e DIST \
        -e OPX_RELEASE \
        opxhub/build sh -l -c "dpkg-deb -b $BUILDKITE_PIPELINE_SLUG $OUTPUT"
      echo "--- Uploading artifacts"
      buildkite-agent artifact upload "$OUTPUT/*"
  - wait: ~
    continue_on_failure: true
  - label: ":debian: Stretch"
    env:
      DIST: stretch
      OPX_RELEASE: unstable
    command: |
      if [[ -n "$BUILDKITE_TAG" ]]; then
        VERSION="$(grep ^Version: DEBIAN/control | awk -F': ' '{print $2}')"
        OPX_RELEASE=testing
      else
        echo "--- Bumping version with git sha and date"
        v="$(grep ^Version: DEBIAN/control | awk -F': ' '{print $2}')"
        if [[ $v == *"+"* ]]; then s="."; else s="+"; fi
        VERSION="${v}${s}git$(date +%Y%m%d).$(git rev-parse --short HEAD)"
        echo "Bumping from $v to $VERSION"
        sed -i "s/$v/$VERSION/g" DEBIAN/control
      fi
      cd ..
      echo "+++ Building packages"
      OUTPUT="pool/${DIST}-amd64/$BUILDKITE_PIPELINE_SLUG"
      mkdir -p "$OUTPUT"
      docker run \
        --rm \
        --privileged \
        -e LOCAL_UID=$(id -u ${USER}) \
        -e LOCAL_GID=$(id -g ${USER}) \
        -v ${PWD}:/mnt \
        -e DIST \
        -e OPX_RELEASE \
        opxhub/build sh -l -c "dpkg-deb -b $BUILDKITE_PIPELINE_SLUG $OUTPUT"
      echo "--- Uploading artifacts"
      buildkite-agent artifact upload "$OUTPUT/*"
  - wait: ~
    continue_on_failure: true
  - label: ":debian: publish"
    branches: "master"
    agents: {queue: aptly}
    concurrency: 1
    concurrency_group: "deb.openswitch.net"
    env:
      OPX_RELEASE: unstable
    command: |
      if [[ -n "$BUILDKITE_TAG" ]]; then
        OPX_RELEASE=testing
      fi
      cd ..
      echo "+++ Publishing Jessie packages to opx-$OPX_RELEASE"
      DIST=jessie
      OUTPUT="pool/${DIST}-amd64/$BUILDKITE_PIPELINE_SLUG"
      buildkite-agent artifact download "$OUTPUT/*" . && {
        aptly repo add -remove-files "opx-$OPX_RELEASE" \
          "$OUTPUT"
        aptly publish update $OPX_RELEASE s3:opx:
        aptly publish update $OPX_RELEASE s3:opx:$DIST
      }
      echo "--- Publishing Stretch packages to opx-${OPX_RELEASE}-stretch"
      DIST=stretch
      OUTPUT="pool/${DIST}-amd64/$BUILDKITE_PIPELINE_SLUG"
      buildkite-agent artifact download "$OUTPUT/*" . && {
        if [[ -n "$BUILDKITE_TAG" ]]; then
          aptly repo add -remove-files "opx-${DIST}" "$OUTPUT"
        else
          aptly repo add -remove-files "opx-${OPX_RELEASE}-${DIST}" "$OUTPUT"
        fi
        aptly publish update $OPX_RELEASE s3:opx:$DIST
      }
